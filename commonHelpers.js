import{a as h,i as l}from"./assets/vendor-1c96f17f.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function o(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(n){if(n.ep)return;n.ep=!0;const r=o(n);fetch(n.href,r)}})();const L={time:document.querySelector(".time")};function S(){const e=new Date,t=e.getDate().toString().padStart(2,"0"),i=["January","February","March","April","May","June","July","August","September","October","November","December"][e.getMonth()],n=e.getFullYear(),r=e.getHours().toString().padStart(2,"0"),a=e.getMinutes().toString().padStart(2,"0"),u=e.getSeconds().toString().padStart(2,"0");return`${t} ${i} ${n}, ${r}:${a}:${u}`}function y(){L.time.textContent=S()}setInterval(y,1e3);y();function m(e,t){const o=JSON.stringify(t);localStorage.setItem(e,o)}function w(e){const t=localStorage.getItem(e);try{return JSON.parse(t)}catch{return null}}function f(e){const t={high:3,medium:2,low:1};return e.sort((o,i)=>t[i.priority]-t[o.priority])}function T(e){switch(e){case"high":return"#F08080";case"medium":return"#FFFACD";case"low":return"#D3D3D3";default:return"#fff"}}function g({text:e,priority:t,id:o}){return`
      <li class="todos-item" style="background-color: ${T(t)}">
        <span class="todos-text">${e}</span>
        <span class="todos-info">${t}</span>
        <div class="btn-wrapper">
          <button id="edit" class="edit" data-id="${o}" type="button">&#9998;</button>
          <button id="done" class="done" data-id="${o}" type="button">&#10003;</button>
          <button id="delete" class="delete" data-id="${o}" type="button">&#10007;</button>
        </div>
      </li>`}h.defaults.baseURL="https://pixabay.com/api/";async function $(e){try{return(await h.get("",{params:{key:"44946850-4c776fe0ffa968f959f660738",q:e,image_type:"photo",orientation:"horizontal",safesearch:!0}})).data}catch(t){throw console.error("Fetch error: ",t),t}}function M(){const t=new Date().getHours();return t>=6&&t<10?"morning":t>=10&&t<16?"work":t>=16&&t<19?"evening":"night"}function d(){const e=M();$(e).then(t=>{if(t.hits.length>0){const o=t.hits[Math.floor(Math.random()*t.hits.length)].webformatURL;document.body.style.backgroundImage=`url(${o})`}else console.log("No images found for this query")}).catch(t=>{console.error("Error fetching background image:",t)})}d();setInterval(d,36e5);const x=document.getElementById("quote"),p=document.getElementById("author"),D=async()=>{var e="https://type.fit/api/quotes";const t=await fetch(e);console.log(typeof t);const o=await t.json(),i=Math.floor(Math.random()*o.length),n=o[i].text,r=o[i].author;r==null&&(p="Anonymous"),x.innerHTML=n,p.innerHTML="~ "+r};function E(e,t,o,i){const n=o.find(a=>a.id===e),r=`
      <input type="text" class="edit-input" value="${n.text}" />
      <select class="edit-select">
        <option value="low" ${n.priority==="low"?"selected":""}>Low</option>
        <option value="medium" ${n.priority==="medium"?"selected":""}>Medium</option>
        <option value="high" ${n.priority==="high"?"selected":""}>High</option>
      </select>
      <button id="save" data-id="${e}">Save</button>
      <button id="cancel" data-id="${e}">Cancel</button>
    `;t.innerHTML=r,document.querySelector(`#save[data-id="${e}"]`).addEventListener("click",()=>q(e,o,i)),document.querySelector(`#cancel[data-id="${e}"]`).addEventListener("click",()=>O(o,i))}function q(e,t,o){const i=document.querySelector(".edit-input"),n=document.querySelector(".edit-select"),r=i.value.trim(),a=n.value;if(!r)return l.error({title:"Error",message:"Task name cannot be empty",position:"bottomRight"});const u=t.findIndex(v=>v.id===e);t[u].text=r,t[u].priority=a,t=f(t),m("todos",t),b(t,o)}function O(e,t){b(e,t)}function b(e,t){t.todoList.innerHTML=e.map(g).join("")}const c={form:document.querySelector(".js-form"),todoList:document.querySelector(".todos-list"),select:document.querySelector(".todos-select")};let s=w("todos")||[];c.form.addEventListener("submit",e=>{e.preventDefault();const t=e.currentTarget.elements.todos.value.trim(),o=e.currentTarget.elements.select.value;if(!t||!o)return l.error({title:"Error",message:"Please enter both a task and a priority",position:"bottomRight"});if(s.some(n=>n.text===t))return l.warning({title:"Warning",message:"You already have such a task",position:"bottomRight"});const i={id:Date.now(),text:t,priority:o};s.push(i),s=f(s),m("todos",s),c.todoList.innerHTML=s.map(g).join(""),c.todoList.scrollTop=c.todoList.scrollHeight,e.currentTarget.reset()});document.addEventListener("DOMContentLoaded",()=>{s.length&&(s=f(s),c.todoList.innerHTML=s.map(g).join(""))});c.todoList.addEventListener("click",e=>{if(e.target.nodeName!=="BUTTON")return;const t=Number(e.target.dataset.id);if(e.target.id==="delete"&&(s=s.filter(o=>o.id!==t),m("todos",s),e.target.closest(".todos-item").remove()),e.target.id==="done"){const o=e.target.closest(".todos-item");o.querySelector(".todos-text").style.textDecoration="line-through"}if(e.target.id==="edit"){const o=e.target.closest(".todos-item");E(t,o,s,c)}});window.addEventListener("load",d);setInterval(d,36e5);D();
//# sourceMappingURL=commonHelpers.js.map
