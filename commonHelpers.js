import{a as m,i as d}from"./assets/vendor-1c96f17f.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function o(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(r){if(r.ep)return;r.ep=!0;const n=o(r);fetch(r.href,n)}})();const b={time:document.querySelector(".time")};function L(){const e=new Date,t=e.getDate().toString().padStart(2,"0"),i=["January","February","March","April","May","June","July","August","September","October","November","December"][e.getMonth()],r=e.getFullYear(),n=e.getHours().toString().padStart(2,"0"),c=e.getMinutes().toString().padStart(2,"0"),y=e.getSeconds().toString().padStart(2,"0");return`${t} ${i} ${r}, ${n}:${c}:${y}`}function f(){b.time.textContent=L()}setInterval(f,1e3);f();function g(e,t){const o=JSON.stringify(t);localStorage.setItem(e,o)}function v(e){const t=localStorage.getItem(e);try{return JSON.parse(t)}catch{return null}}function p(e){const t={high:3,medium:2,low:1};return e.sort((o,i)=>t[i.priority]-t[o.priority])}function w(e){switch(e){case"high":return"#F08080";case"medium":return"#FFFACD";case"low":return"#D3D3D3";default:return"#fff"}}function h({text:e,priority:t,id:o}){return`
      <li class="todos-item" style="background-color: ${w(t)}">
        <span class="todos-text">${e}</span>
        <span class="todos-info">${t}</span>
        <div class="btn-wrapper">
          <button id="edit" class="edit" data-id="${o}" type="button">&#9998;</button>
          <button id="done" class="done" data-id="${o}" type="button">&#10003;</button>
          <button id="delete" class="delete" data-id="${o}" type="button">&#10007;</button>
        </div>
      </li>`}m.defaults.baseURL="https://pixabay.com/api/";async function S(e){try{return(await m.get("",{params:{key:"44946850-4c776fe0ffa968f959f660738",q:e,image_type:"photo",orientation:"horizontal",safesearch:!0}})).data}catch(t){throw console.error("Fetch error: ",t),t}}function T(){const t=new Date().getHours();return t>=6&&t<10?"morning":t>=10&&t<16?"work":t>=16&&t<19?"evening":"night"}function u(){const e=T();S(e).then(t=>{if(t.hits.length>0){const o=t.hits[Math.floor(Math.random()*t.hits.length)].webformatURL;document.body.style.backgroundImage=`url(${o})`}else console.log("No images found for this query")}).catch(t=>{console.error("Error fetching background image:",t)})}u();setInterval(u,36e5);const D=document.getElementById("quote"),l=document.getElementById("author"),M=async()=>{var e="https://type.fit/api/quotes";const t=await fetch(e);console.log(typeof t);const o=await t.json(),i=Math.floor(Math.random()*o.length),r=o[i].text,n=o[i].author;n==null&&(l="Anonymous"),D.innerHTML=r,l.innerHTML="~ "+n},a={form:document.querySelector(".js-form"),todoList:document.querySelector(".todos-list"),select:document.querySelector(".todos-select")};let s=v("todos")||[];a.form.addEventListener("submit",e=>{e.preventDefault();const t=e.currentTarget.elements.todos.value.trim(),o=e.currentTarget.elements.select.value;if(!t||!o)return d.error({title:"Error",message:"Please enter both a task and a priority",position:"bottomRight"});if(s.some(r=>r.text===t))return d.warning({title:"Warning",message:"You already have such a task",position:"bottomRight"});const i={id:Date.now(),text:t,priority:o};s.push(i),s=p(s),g("todos",s),a.todoList.innerHTML=s.map(h).join(""),a.todoList.scrollTop=a.todoList.scrollHeight,e.currentTarget.reset()});document.addEventListener("DOMContentLoaded",()=>{s.length&&(s=p(s),a.todoList.innerHTML=s.map(h).join(""))});a.todoList.addEventListener("click",e=>{if(e.target.nodeName!=="BUTTON")return;const t=Number(e.target.dataset.id);if(e.target.id==="delete"&&(s=s.filter(o=>o.id!==t),g("todos",s),e.target.closest(".todos-item").remove()),e.target.id==="done"){const o=e.target.closest(".todos-item");o.querySelector(".todos-text").style.textDecoration="line-through"}e.target.id==="edit"&&e.target.closest(".todos-item")});window.addEventListener("load",u);setInterval(u,36e5);M();
//# sourceMappingURL=commonHelpers.js.map
